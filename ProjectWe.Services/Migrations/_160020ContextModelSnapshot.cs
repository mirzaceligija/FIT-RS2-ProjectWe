// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectWe.Services.Database;

#nullable disable

namespace ProjectWe.Services.Migrations
{
    [DbContext(typeof(_160020Context))]
    partial class _160020ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(2960));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DirectBeneficiaries")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndirectBeneficiaries")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(3072));

                    b.Property<string>("Locations")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("OutputId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("OutputId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Activities", (string)null);

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4468),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4468),
                            OutputId = 1,
                            ProjectId = 1,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4467),
                            UserId = 2
                        },
                        new
                        {
                            ActivityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4473),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4472),
                            OutputId = 2,
                            ProjectId = 2,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4472),
                            UserId = 2
                        },
                        new
                        {
                            ActivityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4474),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4474),
                            OutputId = 3,
                            ProjectId = 3,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4474),
                            UserId = 3
                        },
                        new
                        {
                            ActivityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4476),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4475),
                            OutputId = 4,
                            ProjectId = 4,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4475),
                            UserId = 4
                        },
                        new
                        {
                            ActivityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4477),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4477),
                            OutputId = 5,
                            ProjectId = 5,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4477),
                            UserId = 5
                        },
                        new
                        {
                            ActivityId = 6,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4479),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4478),
                            OutputId = 6,
                            ProjectId = 6,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4478),
                            UserId = 6
                        },
                        new
                        {
                            ActivityId = 7,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4480),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4480),
                            OutputId = 7,
                            ProjectId = 7,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4479),
                            UserId = 7
                        },
                        new
                        {
                            ActivityId = 8,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4481),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4481),
                            OutputId = 8,
                            ProjectId = 8,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4481),
                            UserId = 7
                        },
                        new
                        {
                            ActivityId = 9,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4482),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4482),
                            OutputId = 9,
                            ProjectId = 9,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4482),
                            UserId = 8
                        },
                        new
                        {
                            ActivityId = 10,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4484),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4483),
                            OutputId = 10,
                            ProjectId = 10,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4483),
                            UserId = 9
                        },
                        new
                        {
                            ActivityId = 11,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4485),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4485),
                            OutputId = 11,
                            ProjectId = 11,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4484),
                            UserId = 9
                        },
                        new
                        {
                            ActivityId = 12,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4486),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4486),
                            OutputId = 12,
                            ProjectId = 12,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4486),
                            UserId = 10
                        },
                        new
                        {
                            ActivityId = 13,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4487),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4487),
                            OutputId = 13,
                            ProjectId = 13,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4487),
                            UserId = 2
                        },
                        new
                        {
                            ActivityId = 14,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4489),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4488),
                            OutputId = 14,
                            ProjectId = 14,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4488),
                            UserId = 3
                        },
                        new
                        {
                            ActivityId = 15,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4490),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4490),
                            OutputId = 15,
                            ProjectId = 15,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4489),
                            UserId = 4
                        },
                        new
                        {
                            ActivityId = 16,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4491),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4491),
                            OutputId = 16,
                            ProjectId = 16,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4491),
                            UserId = 6
                        },
                        new
                        {
                            ActivityId = 17,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4492),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4492),
                            OutputId = 17,
                            ProjectId = 17,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4492),
                            UserId = 7
                        },
                        new
                        {
                            ActivityId = 18,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4494),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4493),
                            OutputId = 18,
                            ProjectId = 18,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4493),
                            UserId = 2
                        },
                        new
                        {
                            ActivityId = 19,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4495),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4495),
                            OutputId = 19,
                            ProjectId = 19,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4494),
                            UserId = 2
                        },
                        new
                        {
                            ActivityId = 20,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4496),
                            Description = "Test",
                            EndDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4496),
                            OutputId = 20,
                            ProjectId = 20,
                            StartDate = new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(4496),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(5219));

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(5336));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AppRoles", (string)null);
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(658));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(740));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .IsUnique()
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AppUsers", (string)null);
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(1248));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(1310));

                    b.Property<int>("NumberOfUnits")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("([CostPerUnit]*[NumberOfUnits])", false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BudgetId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets", (string)null);

                    b.HasData(
                        new
                        {
                            BudgetId = 1,
                            ActivityId = 1,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2580),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            BudgetId = 2,
                            ActivityId = 2,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2582),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            BudgetId = 3,
                            ActivityId = 3,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2583),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 3,
                            UserId = 3
                        },
                        new
                        {
                            BudgetId = 4,
                            ActivityId = 4,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2584),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 4,
                            UserId = 4
                        },
                        new
                        {
                            BudgetId = 5,
                            ActivityId = 5,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2585),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 5,
                            UserId = 5
                        },
                        new
                        {
                            BudgetId = 6,
                            ActivityId = 6,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2586),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 6,
                            UserId = 6
                        },
                        new
                        {
                            BudgetId = 7,
                            ActivityId = 7,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2586),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 7,
                            UserId = 7
                        },
                        new
                        {
                            BudgetId = 8,
                            ActivityId = 8,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2587),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 8,
                            UserId = 7
                        },
                        new
                        {
                            BudgetId = 9,
                            ActivityId = 9,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2588),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 9,
                            UserId = 8
                        },
                        new
                        {
                            BudgetId = 10,
                            ActivityId = 10,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2589),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 10,
                            UserId = 9
                        },
                        new
                        {
                            BudgetId = 11,
                            ActivityId = 11,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2590),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 11,
                            UserId = 9
                        },
                        new
                        {
                            BudgetId = 12,
                            ActivityId = 12,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2590),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 12,
                            UserId = 10
                        },
                        new
                        {
                            BudgetId = 13,
                            ActivityId = 13,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2591),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 13,
                            UserId = 2
                        },
                        new
                        {
                            BudgetId = 14,
                            ActivityId = 14,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2592),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 14,
                            UserId = 3
                        },
                        new
                        {
                            BudgetId = 15,
                            ActivityId = 15,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2593),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 15,
                            UserId = 4
                        },
                        new
                        {
                            BudgetId = 16,
                            ActivityId = 16,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2593),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 16,
                            UserId = 6
                        },
                        new
                        {
                            BudgetId = 17,
                            ActivityId = 17,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2594),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 17,
                            UserId = 7
                        },
                        new
                        {
                            BudgetId = 18,
                            ActivityId = 18,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2595),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 18,
                            UserId = 2
                        },
                        new
                        {
                            BudgetId = 19,
                            ActivityId = 19,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2596),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 19,
                            UserId = 2
                        },
                        new
                        {
                            BudgetId = 20,
                            ActivityId = 20,
                            CostPerUnit = 0m,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2596),
                            Description = "Test",
                            NumberOfUnits = 0,
                            ProjectId = 20,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(2911));

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3001));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3036),
                            Name = "Civic engagement and participation"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3038),
                            Name = "Volunteerism and community service"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3039),
                            Name = "Youth development"
                        },
                        new
                        {
                            CategoryId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3040),
                            Name = "Neighborhood revitalization"
                        },
                        new
                        {
                            CategoryId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3040),
                            Name = "Interfaith and intercultural understanding"
                        },
                        new
                        {
                            CategoryId = 6,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3041),
                            Name = "Aging and elder care"
                        },
                        new
                        {
                            CategoryId = 7,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3042),
                            Name = "Food security and access"
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3263));

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3313));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("CityId");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3347),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3348),
                            Name = "Mostar"
                        },
                        new
                        {
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3349),
                            Name = "Banja Luka"
                        },
                        new
                        {
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3350),
                            Name = "Zenica"
                        },
                        new
                        {
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3350),
                            Name = "Tuzla"
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Objective", b =>
                {
                    b.Property<int>("ObjectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectiveId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3578));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(3635));

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ObjectiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Objectives", (string)null);

                    b.HasData(
                        new
                        {
                            ObjectiveId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4558),
                            Description = "Objective 1",
                            ProjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ObjectiveId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4560),
                            Description = "Objective 2",
                            ProjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            ObjectiveId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4561),
                            Description = "Objective 3",
                            ProjectId = 3,
                            UserId = 3
                        },
                        new
                        {
                            ObjectiveId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4562),
                            Description = "Objective 4",
                            ProjectId = 4,
                            UserId = 4
                        },
                        new
                        {
                            ObjectiveId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4563),
                            Description = "Objective 5",
                            ProjectId = 5,
                            UserId = 5
                        },
                        new
                        {
                            ObjectiveId = 6,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4564),
                            Description = "Objective 6",
                            ProjectId = 6,
                            UserId = 6
                        },
                        new
                        {
                            ObjectiveId = 7,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4565),
                            Description = "Objective 7",
                            ProjectId = 7,
                            UserId = 7
                        },
                        new
                        {
                            ObjectiveId = 8,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4565),
                            Description = "Objective 8",
                            ProjectId = 8,
                            UserId = 7
                        },
                        new
                        {
                            ObjectiveId = 9,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4592),
                            Description = "Objective 9",
                            ProjectId = 9,
                            UserId = 8
                        },
                        new
                        {
                            ObjectiveId = 10,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4593),
                            Description = "Objective 10",
                            ProjectId = 10,
                            UserId = 9
                        },
                        new
                        {
                            ObjectiveId = 11,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4594),
                            Description = "Objective 11",
                            ProjectId = 11,
                            UserId = 9
                        },
                        new
                        {
                            ObjectiveId = 12,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4595),
                            Description = "Objective 12",
                            ProjectId = 12,
                            UserId = 10
                        },
                        new
                        {
                            ObjectiveId = 13,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4595),
                            Description = "Objective 13",
                            ProjectId = 13,
                            UserId = 2
                        },
                        new
                        {
                            ObjectiveId = 14,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4596),
                            Description = "Objective 14",
                            ProjectId = 14,
                            UserId = 3
                        },
                        new
                        {
                            ObjectiveId = 15,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4597),
                            Description = "Objective 15",
                            ProjectId = 15,
                            UserId = 4
                        },
                        new
                        {
                            ObjectiveId = 16,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4598),
                            Description = "Objective 16",
                            ProjectId = 16,
                            UserId = 6
                        },
                        new
                        {
                            ObjectiveId = 17,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4599),
                            Description = "Objective 17",
                            ProjectId = 17,
                            UserId = 7
                        },
                        new
                        {
                            ObjectiveId = 18,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4599),
                            Description = "Objective 18",
                            ProjectId = 18,
                            UserId = 2
                        },
                        new
                        {
                            ObjectiveId = 19,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4600),
                            Description = "Objective 19",
                            ProjectId = 19,
                            UserId = 2
                        },
                        new
                        {
                            ObjectiveId = 20,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(4601),
                            Description = "Objective 20",
                            ProjectId = 20,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Output", b =>
                {
                    b.Property<int>("OutputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutputId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(5087));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Indicators")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(5180));

                    b.Property<string>("MeansOfVerification")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OutputId");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Outputs", (string)null);

                    b.HasData(
                        new
                        {
                            OutputId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6208),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            OutputId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6209),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            OutputId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6211),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 3,
                            UserId = 3
                        },
                        new
                        {
                            OutputId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6212),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 4,
                            UserId = 4
                        },
                        new
                        {
                            OutputId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6212),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 5,
                            UserId = 5
                        },
                        new
                        {
                            OutputId = 6,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6213),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 6,
                            UserId = 6
                        },
                        new
                        {
                            OutputId = 7,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6214),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 7,
                            UserId = 7
                        },
                        new
                        {
                            OutputId = 8,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6215),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 8,
                            UserId = 7
                        },
                        new
                        {
                            OutputId = 9,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6216),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 9,
                            UserId = 8
                        },
                        new
                        {
                            OutputId = 10,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6217),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 10,
                            UserId = 9
                        },
                        new
                        {
                            OutputId = 11,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6218),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 11,
                            UserId = 9
                        },
                        new
                        {
                            OutputId = 12,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6219),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 12,
                            UserId = 10
                        },
                        new
                        {
                            OutputId = 13,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6220),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 13,
                            UserId = 2
                        },
                        new
                        {
                            OutputId = 14,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6221),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 14,
                            UserId = 3
                        },
                        new
                        {
                            OutputId = 15,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6222),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 15,
                            UserId = 4
                        },
                        new
                        {
                            OutputId = 16,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6223),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 16,
                            UserId = 6
                        },
                        new
                        {
                            OutputId = 17,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6223),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 17,
                            UserId = 7
                        },
                        new
                        {
                            OutputId = 18,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6224),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 18,
                            UserId = 2
                        },
                        new
                        {
                            OutputId = 19,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6225),
                            Description = "Output 1",
                            ObjectiveId = 1,
                            ProjectId = 19,
                            UserId = 2
                        },
                        new
                        {
                            OutputId = 20,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6226),
                            Description = "Output 1",
                            ObjectiveId = 2,
                            ProjectId = 20,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6537));

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(6642));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            CategoryId = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(7995),
                            Description = "Project Description 1",
                            Name = "Project 1",
                            StatusId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            CategoryId = 2,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(7998),
                            Description = "Project Description 2",
                            Name = "Project 2",
                            StatusId = 2,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 3,
                            CategoryId = 3,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8000),
                            Description = "Project Description 3",
                            Name = "Project 3",
                            StatusId = 3,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 4,
                            CategoryId = 4,
                            CityId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8001),
                            Description = "Project Description 4",
                            Name = "Project 4",
                            StatusId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 5,
                            CategoryId = 5,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8003),
                            Description = "Project Description 5",
                            Name = "Project 5",
                            StatusId = 1,
                            UserId = 5
                        },
                        new
                        {
                            ProjectId = 6,
                            CategoryId = 6,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8004),
                            Description = "Project Description 6",
                            Name = "Project 6",
                            StatusId = 2,
                            UserId = 6
                        },
                        new
                        {
                            ProjectId = 7,
                            CategoryId = 7,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8005),
                            Description = "Project Description 7",
                            Name = "Project 7",
                            StatusId = 3,
                            UserId = 7
                        },
                        new
                        {
                            ProjectId = 8,
                            CategoryId = 1,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8007),
                            Description = "Project Description 8",
                            Name = "Project 8",
                            StatusId = 2,
                            UserId = 7
                        },
                        new
                        {
                            ProjectId = 9,
                            CategoryId = 2,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8048),
                            Description = "Project Description 9",
                            Name = "Project 9",
                            StatusId = 1,
                            UserId = 8
                        },
                        new
                        {
                            ProjectId = 10,
                            CategoryId = 3,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8050),
                            Description = "Project Description 10",
                            Name = "Project 10",
                            StatusId = 2,
                            UserId = 9
                        },
                        new
                        {
                            ProjectId = 11,
                            CategoryId = 4,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8052),
                            Description = "Project Description 11",
                            Name = "Project 11",
                            StatusId = 3,
                            UserId = 9
                        },
                        new
                        {
                            ProjectId = 12,
                            CategoryId = 5,
                            CityId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8053),
                            Description = "Project Description 12",
                            Name = "Project 12",
                            StatusId = 1,
                            UserId = 10
                        },
                        new
                        {
                            ProjectId = 13,
                            CategoryId = 6,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8055),
                            Description = "Project Description 13",
                            Name = "Project 13",
                            StatusId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 14,
                            CategoryId = 7,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8056),
                            Description = "Project Description 14",
                            Name = "Project 14",
                            StatusId = 1,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 15,
                            CategoryId = 1,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8057),
                            Description = "Project Description 15",
                            Name = "Project 15",
                            StatusId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 16,
                            CategoryId = 2,
                            CityId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8059),
                            Description = "Project Description 16",
                            Name = "Project 16",
                            StatusId = 3,
                            UserId = 6
                        },
                        new
                        {
                            ProjectId = 17,
                            CategoryId = 2,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8060),
                            Description = "Project Description 17",
                            Name = "Project 17",
                            StatusId = 3,
                            UserId = 7
                        },
                        new
                        {
                            ProjectId = 18,
                            CategoryId = 3,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8061),
                            Description = "Project Description 18",
                            Name = "Project 18",
                            StatusId = 3,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 19,
                            CategoryId = 4,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8062),
                            Description = "Project Description 19",
                            Name = "Project 19",
                            StatusId = 4,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 20,
                            CategoryId = 5,
                            CityId = 5,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8064),
                            Description = "Project Description 20",
                            Name = "Project 20",
                            StatusId = 4,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8382));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(8452));

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews", (string)null);

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(9776),
                            Description = "Review 1",
                            ProjectId = 1,
                            StatusId = 2,
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 711, DateTimeKind.Utc).AddTicks(9778),
                            Description = "Review 2",
                            ProjectId = 2,
                            StatusId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(90));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(172));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses", (string)null);

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(209),
                            Name = "Submitted"
                        },
                        new
                        {
                            StatusId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(210),
                            Name = "Needs Improvment"
                        },
                        new
                        {
                            StatusId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(211),
                            Name = "Active"
                        },
                        new
                        {
                            StatusId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(212),
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoteId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(461));

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(518));

                    b.Property<bool>("Positive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VoteId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes", (string)null);

                    b.HasData(
                        new
                        {
                            VoteId = 1,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(1210),
                            Positive = true,
                            ProjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            VoteId = 2,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(1212),
                            Positive = true,
                            ProjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            VoteId = 3,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(1213),
                            Positive = true,
                            ProjectId = 2,
                            UserId = 1
                        },
                        new
                        {
                            VoteId = 4,
                            CreatedAt = new DateTime(2023, 6, 16, 19, 12, 48, 712, DateTimeKind.Utc).AddTicks(1213),
                            Positive = false,
                            ProjectId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppUserRoles", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(5680));

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 6, 16, 19, 12, 48, 710, DateTimeKind.Utc).AddTicks(5756));

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Activity", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Output", "Output")
                        .WithMany("Activities")
                        .HasForeignKey("OutputId")
                        .IsRequired()
                        .HasConstraintName("FK_Activity__OutputId");

                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Activities")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_UserId");

                    b.Navigation("Output");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Budget", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Activity", "Activity")
                        .WithMany("Budgets")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK_Budgets__ActivityId");

                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Budgets")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Budgets_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Budgets_UserId");

                    b.Navigation("Activity");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Objective", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Objectives")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Objective_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Objectives")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Objective_UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Output", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Objective", "Objective")
                        .WithMany("Outputs")
                        .HasForeignKey("ObjectiveId")
                        .IsRequired()
                        .HasConstraintName("FK_Outputs_ObjectiveId");

                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Outputs")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Outputs_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Outputs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Outputs_UserId");

                    b.Navigation("Objective");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Project", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Category", "Category")
                        .WithMany("Projects")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Projects_CategoryId");

                    b.HasOne("ProjectWe.Services.Database.City", "City")
                        .WithMany("Projects")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK_Projects_CityId");

                    b.HasOne("ProjectWe.Services.Database.Status", "Status")
                        .WithMany("Projects")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Projects_StatusId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Projects_UserId");

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Review", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Reviews")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.Status", "Status")
                        .WithMany("Reviews")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_StatusId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_UserId");

                    b.Navigation("Project");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Vote", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.Project", "Project")
                        .WithMany("Votes")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Votes_ProjectId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Votes_UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppUserRoles", b =>
                {
                    b.HasOne("ProjectWe.Services.Database.AppRole", "AppRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_AppUserRoles_RoleId");

                    b.HasOne("ProjectWe.Services.Database.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_AppUserRoles_UserId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", null)
                        .WithOne()
                        .HasForeignKey("ProjectWe.Services.Database.AppUserRoles", "UserId", "RoleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Activity", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppRole", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.AppUser", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("AppUserRoles");

                    b.Navigation("Budgets");

                    b.Navigation("Objectives");

                    b.Navigation("Outputs");

                    b.Navigation("Projects");

                    b.Navigation("Reviews");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Category", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.City", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Objective", b =>
                {
                    b.Navigation("Outputs");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Output", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Project", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Budgets");

                    b.Navigation("Objectives");

                    b.Navigation("Outputs");

                    b.Navigation("Reviews");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("ProjectWe.Services.Database.Status", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
